name: "Advanced Security Analysis for LitElement"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '39 7 * * 6'

env:
  NODE_VERSION: '22'

jobs:
  analyze:
    name: CodeQL Analyze (JavaScript/TypeScript)
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: [javascript-typescript]
        build-mode: [none]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm install

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: +security-extended,security-and-quality,javascript-security-and-quality

      - name: Run npm audit
        run: npm audit --production --audit-level=high
        continue-on-error: true

      - name: Run ESLint Security Plugin
        run: npx eslint ./src --ext .ts --plugin eslint-plugin-security --rule 'security/detect-object-injection'
        continue-on-error: true

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  dependency-vulnerability-scan:
    name: Scan Dependencies for Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm install

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk to Check for Vulnerabilities
        run: snyk test --all-projects --severity-threshold=low

  owasp-zap-scan:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull OWASP ZAP Docker image
        run: docker pull ictu/zap2docker-weekly

      - name: Set up OWASP ZAP
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'https://soft-cloud-dev.github.io/lit-element-starter-ts'
          rules_file_name: '.zap/rules.tsv'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
